"""empty message

Revision ID: f8e6c244a9bc
Revises: 
Create Date: 2018-08-26 15:27:57.410844

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f8e6c244a9bc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('control',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('language', sa.String(length=4), server_default='en', nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_control_language'), 'control', ['language'], unique=False)
    op.create_index(op.f('ix_control_number'), 'control', ['number'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('account_credential',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner_id', name='account_cred_uniq')
    )
    op.create_index(op.f('ix_account_credential_name'), 'account_credential', ['name'], unique=False)
    op.create_index(op.f('ix_account_credential_owner_id'), 'account_credential', ['owner_id'], unique=False)
    op.create_index(op.f('ix_account_credential_username'), 'account_credential', ['username'], unique=False)
    op.create_table('scan_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='scan_profile_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner_id', name='scan_profile_uniq')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Enum('Idle', 'Wait', 'Running', name='taskstatus'), server_default='Idle', nullable=False),
    sa.Column('uid', sa.String(length=128), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='task_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'owner_id', name='task_uniq')
    )
    op.create_index(op.f('ix_task_name'), 'task', ['name'], unique=False)
    op.create_table('profile_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transport', sa.String(), nullable=False),
    sa.Column('setting', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['scan_profile.id'], name='profile_setting_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transport', 'setting', 'profile_id', name='profile_setting_uniq')
    )
    op.create_index(op.f('ix_profile_setting_profile_id'), 'profile_setting', ['profile_id'], unique=False)
    op.create_table('task_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('started', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('finished', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='task_fk', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name='task_result_fk', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hostname', sa.String(length=128), nullable=True),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['scan_profile.id'], name='task_setting_fk', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name='task_setting_fk2', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hostname', 'profile_id', 'task_id', name='task_setting_uniq')
    )
    op.create_table('host_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('config', sa.String(), nullable=True),
    sa.Column('hostname', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task_result.id'], name='host_result_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('control_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host_result_id', sa.Integer(), nullable=False),
    sa.Column('control_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NotChecked', 'Compliance', 'NotCompliance', 'NotApplicable', 'Error', name='controlstatus'), nullable=False),
    sa.Column('result', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['host_result_id'], ['host_result.id'], name='control_result_fk', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('control_result')
    op.drop_table('host_result')
    op.drop_table('task_setting')
    op.drop_table('task_result')
    op.drop_index(op.f('ix_profile_setting_profile_id'), table_name='profile_setting')
    op.drop_table('profile_setting')
    op.drop_index(op.f('ix_task_name'), table_name='task')
    op.drop_table('task')
    op.drop_table('scan_profile')
    op.drop_index(op.f('ix_account_credential_username'), table_name='account_credential')
    op.drop_index(op.f('ix_account_credential_owner_id'), table_name='account_credential')
    op.drop_index(op.f('ix_account_credential_name'), table_name='account_credential')
    op.drop_table('account_credential')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_control_number'), table_name='control')
    op.drop_index(op.f('ix_control_language'), table_name='control')
    op.drop_table('control')
    # ### end Alembic commands ###
